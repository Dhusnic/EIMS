{
  "on_failure": [
    {
      "set": {
        "value": "{{ _ingest.on_failure_message }}",
        "field": "error.message"
      }
    }
  ],
  "description": "Pipeline for parsing redis logs",
  "processors": [
    {
      "set": {
        "value": "{{_ingest.timestamp}}",
        "field": "event.ingested"
      }
    },
    {
      "grok": {
        "pattern_definitions": {
          "REDISTIMESTAMP2": "%{MONTHDAY} %{MONTH} %{YEAR} %{TIME}",
          "CHAR": "[a-zA-Z]",
          "REDISLEVEL": "[.\\-*#]",
          "REDISTIMESTAMP1": "%{MONTHDAY} %{MONTH} %{TIME}"
        },
        "field": "event.original",
        "patterns": [
          "(%{POSINT:process.pid:long}:%{CHAR:redis.log.role} )?(%{REDISTIMESTAMP1:redis.log.timestamp}||%{REDISTIMESTAMP2:redis.log.timestamp}) %{REDISLEVEL:log.level} %{GREEDYDATA:event.originalz}",
          "%{POSINT:process.pid:long}:signal-handler \\(%{POSINT:redis.log.timestamp}\\) %{GREEDYDATA:event.originalz}"
        ]
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "if (ctx.log.level == params.dot) {\n  ctx.log.level = params.debug;\n} else if (ctx.log.level == params.dash) {\n  ctx.log.level = params.verbose;\n} else if (ctx.log.level == params.asterisk) {\n  ctx.log.level = params.notice;\n} else if (ctx.log.level == params.hash) {\n  ctx.log.level = params.warning;\n}",
        "params": {
          "verbose": "verbose",
          "asterisk": "*",
          "notice": "notice",
          "hash": "#",
          "warning": "warning",
          "dot": ".",
          "debug": "debug",
          "dash": "-"
        }
      }
    },
    {
      "script": {
        "source": "if (ctx.redis.log.role == params.master_abbrev) {\n  ctx.redis.log.role = params.master;\n} else if (ctx.redis.log.role == params.slave_abbrev) {\n  ctx.redis.log.role = params.slave;\n} else if (ctx.redis.log.role == params.child_abbrev) {\n  ctx.redis.log.role = params.child;\n} else if (ctx.redis.log.role == params.sentinel_abbrev) {\n  ctx.redis.log.role = params.sentinel;\n}",
        "params": {
          "sentinel": "sentinel",
          "master_abbrev": "M",
          "master": "master",
          "slave_abbrev": "S",
          "slave": "slave",
          "child_abbrev": "C",
          "child": "child",
          "sentinel_abbrev": "X"
        },
        "lang": "painless"
      }
    },
    {
      "set": {
        "copy_from": "@timestamp",
        "field": "event.created"
      }
    },
    {
      "date": {
        "target_field": "@timestamp",
        "formats": [
          "dd MMM yyyy H:m:s.SSS",
          "dd MMM H:m:s.SSS",
          "dd MMM H:m:s",
          "UNIX"
        ],
        "ignore_failure": true,
        "field": "redis.log.timestamp"
      }
    },
    {
      "remove": {
        "field": "redis.log.timestamp",
        "ignore_failure": true
      }
    },
    {
      "set": {
        "field": "event.kind",
        "value": "event"
      }
    },
    {
      "append": {
        "value": "database",
        "field": "event.category"
      }
    },
    {
      "append": {
        "field": "event.type",
        "value": "info"
      }
    }
  ]
}

