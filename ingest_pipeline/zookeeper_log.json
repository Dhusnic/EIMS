{
  "description": "Pipeline for parsing ZooKeeper log messages",
  "processors": [
    {
      "set": {
        "field": "event.ingested",
        "value": "{{_ingest.timestamp}}"
      }
    },
    {
      "rename": {
        "field": "message",
        "target_field": "event.original"
      }
    },
    {
      "grok": {
        "field": "event.original",
        "trace_match": true,
        "pattern_definitions": {
          "GREEDYMULTILINE": "(.|\r|\n)*"
        },
        "patterns": [
          "%{TIMESTAMP_ISO8601:zookeeper.log.timestamp}%{SPACE}\\[myid:(%{POSINT:service.node.name})?\\]%{SPACE}-%{SPACE}%{LOGLEVEL:log.level}%{SPACE}\\[%{DATA:zookeeper.log.process}\\]%{SPACE}-%{SPACE}%{GREEDYMULTILINE:message}"
        ]
      }
    },
    {
      "grok": {
        "patterns": [
          "%{GREEDYDATA:process.thread.name}:%{CALLER_CLASS:log.logger}@%{POSINT:log.origin.file.line}"
        ],
        "pattern_definitions": {
          "CALLER_CLASS": "(%{JAVACLASS}|%{NOTSPACE})"
        },
        "field": "zookeeper.log.process",
        "ignore_missing": true,
        "ignore_failure": true
      }
    },
    {
      "remove": {
        "field": "zookeeper.log.process",
        "ignore_missing": true
      }
    },
    {
      "set": {
        "copy_from": "@timestamp",
        "field": "event.created"
      }
    },
    {
      "date": {
        "formats": [
          "yyyy-MM-dd HH:mm:ss,SSS"
        ],
        "on_failure": [
          {
            "append": {
              "value": "{{ _ingest.on_failure_message }}",
              "field": "error.message"
            }
          }
        ],
        "if": "ctx.event.timezone == null",
        "field": "zookeeper.log.timestamp",
        "target_field": "@timestamp"
      }
    },
    {
      "date": {
        "target_field": "@timestamp",
        "formats": [
          "yyyy-MM-dd HH:mm:ss,SSS"
        ],
        "timezone": "{{ event.timezone }}",
        "on_failure": [
          {
            "append": {
              "field": "error.message",
              "value": "{{ _ingest.on_failure_message }}"
            }
          }
        ],
        "if": "ctx.event.timezone != null",
        "field": "zookeeper.log.timestamp"
      }
    },
    {
      "remove": {
        "field": "zookeeper.log.timestamp"
      }
    },
    {
      "set": {
        "field": "event.kind",
        "value": "event"
      }
    },
    {
      "script": {
        "source": "def errorLevels = [\"ERROR\", \"FATAL\"]; if (ctx?.log?.level != null) {\n  if (errorLevels.contains(ctx.log.level)) {\n    ctx.event.type = \"error\";\n  } else {\n    ctx.event.type = \"info\";\n  }\n}",
        "lang": "painless"
      }
    }
  ],
  "on_failure": [
    {
      "set": {
        "field": "error.log",
        "value": "{{ _ingest.on_failure_message }}"
      }
    }
  ]
}